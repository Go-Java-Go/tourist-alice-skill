// Code generated by mockery v2.8.0. DO NOT EDIT.

// +build test

package mocks

import (
	context "context"
	api "tourist-alice-skill/internal/api"

	mock "github.com/stretchr/testify/mock"

	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// ChatStateRepository is an autogenerated mock type for the ChatStateRepository type
type ChatStateRepository struct {
	mock.Mock
}

// DeleteById provides a mock function with given fields: ctx, id
func (_m *ChatStateRepository) DeleteById(ctx context.Context, id primitive.ObjectID) error {
	ret := _m.Called(ctx, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, primitive.ObjectID) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindByUserId provides a mock function with given fields: ctx, userId
func (_m *ChatStateRepository) FindByUserId(ctx context.Context, userId string) (*api.ChatState, error) {
	ret := _m.Called(ctx, userId)

	var r0 *api.ChatState
	if rf, ok := ret.Get(0).(func(context.Context, string) *api.ChatState); ok {
		r0 = rf(ctx, userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.ChatState)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, u
func (_m *ChatStateRepository) Save(ctx context.Context, u *api.ChatState) error {
	ret := _m.Called(ctx, u)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *api.ChatState) error); ok {
		r0 = rf(ctx, u)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
